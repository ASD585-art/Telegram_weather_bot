import logging
import requests
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters

# üîπ –í–°–¢–ê–í–¨ —Å—é–¥–∞ —Å–≤–æ–∏ –∫–ª—é—á–∏:
TELEGRAM_TOKEN = "8425189026:AAGj9BK_W1q7ydcmTjlmVIUdLsnUTcVdZmc"
OPENWEATHER_API_KEY = "22f563ba71fc046b39c57a30e6f61d73"

# üîπ –†–∞–π–æ–Ω—ã –ö–∞—Ä–∞–≥–∞–Ω–¥—ã (–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã)
districts = {
    "–º–∏—Ö–∞–π–ª–æ–≤–∫–∞": (49.8300, 73.1650),
    "–Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥": (49.8070, 73.0930),
    "—é–≥–æ–≤–æ—Å—Ç–æ–∫": (49.7800, 73.1700),
    "—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞": (49.8800, 73.0500),
    "–º–∞–π–∫—É–¥—É–∫": (49.9500, 73.1500),
    "—Ñ–µ–¥–æ—Ä–æ–≤–∫–∞": (49.9000, 73.1200),
    "–ø—Ä–∏—à–∞—Ö—Ç–∏–Ω—Å–∫": (49.9314, 73.0868),
}

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

def start(update, context):
    update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –ø–æ —Ä–∞–π–æ–Ω–∞–º –ö–∞—Ä–∞–≥–∞–Ω–¥—ã.\n\n"
        "–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–π–æ–Ω–∞:\n"
        "‚Ä¢ –ú–∏—Ö–∞–π–ª–æ–≤–∫–∞\n"
        "‚Ä¢ –ù–æ–≤—ã–π –≥–æ—Ä–æ–¥\n"
        "‚Ä¢ –Æ–≥–æ–≤–æ—Å—Ç–æ–∫\n"
        "‚Ä¢ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞\n"
        "‚Ä¢ –ú–∞–π–∫—É–¥—É–∫\n"
        "‚Ä¢ –§–µ–¥–æ—Ä–æ–≤–∫–∞\n"
        "‚Ä¢ –ü—Ä–∏—à–∞—Ö—Ç–∏–Ω—Å–∫"
    )

def get_weather(lat, lon):
    url = f"http://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={OPENWEATHER_API_KEY}&units=metric&lang=ru"
    data = requests.get(url).json()

    if data.get("cod") != 200:
        return "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ."

    temp = data["main"]["temp"]
    feels = data["main"]["feels_like"]
    condition = data["weather"][0]["description"]
    wind_speed = data["wind"]["speed"]
    wind_deg = data["wind"].get("deg", 0)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞
    dirs = ["—Å–µ–≤–µ—Ä–Ω—ã–π", "—Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π", "–≤–æ—Å—Ç–æ—á–Ω—ã–π", "—é–≥–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π",
            "—é–∂–Ω—ã–π", "—é–≥–æ-–∑–∞–ø–∞–¥–Ω—ã–π", "–∑–∞–ø–∞–¥–Ω—ã–π", "—Å–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω—ã–π"]
    wind_dir = dirs[int((wind_deg + 22.5) / 45) % 8]

    result = (
        f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels}¬∞C)\n"
        f"‚òÅÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ: {condition.capitalize()}\n"
        f"üí® –í–µ—Ç–µ—Ä: {wind_speed} –º/—Å, {wind_dir}\n"
    )

    return result

def weather(update, context):
    user_text = update.message.text.lower()

    if user_text in districts:
        lat, lon = districts[user_text]
        forecast = get_weather(lat, lon)
        update.message.reply_text(f"üìç –ü–æ–≥–æ–¥–∞ –≤ —Ä–∞–π–æ–Ω–µ {user_text.capitalize()}:\n\n{forecast}")
    else:
        update.message.reply_text("‚ùå –Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ —Ä–∞–π–æ–Ω–∞. –ù–∞–ø–∏—à–∏ –æ–¥–∏–Ω –∏–∑: " + ", ".join(districts.keys()))

def main():
    updater = Updater(TELEGRAM_TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, weather))

    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
